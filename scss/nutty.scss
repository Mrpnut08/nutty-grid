@mixin reverseSpacing($side, $value){
    $reverse: none;
    @if $side == left { $reverse: right; }
    @else { $reverse: left; }
    
    #{$gutter-type}-#{$reverse}: #{$value};
}

/// Sets a column gutter and floating parameters according to $side.
@mixin col($side) {
    
    //Set the float and the gutter.
    float: $side;
    @include reverseSpacing($side, $gutter_size);
    
    //Do not add gutter if the column is the last one.
    &:last-child {
        @include reverseSpacing($side, 0);
    }
}

@mixin colRegex($tier, $side) {
    $regex : '\'col-' + $tier + '\'';
    & > [class*=#{$regex}] {
        @include col($side);
        
        & + .col-#{$tier}-#{'0'}:last-child,
        & + .col-#{$tier}-hidden:last-child,{
            @include reverseSpacing($side, 0);
        }
    }
}

@mixin get_col_size($cn) {
    @if $cn == $col_number {
        width : 100%;
    } @else {
        $w: 100% - ($gutter_size * ($col_number - 1));
        $w: $w / $col_number * $cn;
        $w: $w + ($gutter_size * ($cn - 1));
        
        width: $w;
    }
}

@mixin getOffsetSize($cn, $side) {
    $m: 100% / $col_number * $cn;
    margin-#{$side}: $m;
}

%clearfix {
    zoom: 1;
    
    &:before, &:after {
        content: ".";
        display: block;
        height: 0;
        overflow: hidden;
    }
    
    &:after {
        clear:both;
    }
}